type TokenSale @entity {
  id: ID!
  tokenId: BigInt!
  ipfsHash: String!
  startTime: Int!
  endTime: Int!
  softCap: BigInt!
  hardCap: BigInt!
  totalSupply: BigInt!
  totalIgnited: BigInt!
  rewardSupply: BigInt!
  dev: Bytes!
  deployed: Bytes!
  pair: Bytes!
  isSparked: Boolean!
  name: String!
  symbol: String!
  ignitors: [Ignitor]! @derivedFrom(field: "tokenSale")
}

type Ignitor @entity {
  id: ID!
  address: Bytes!
  ignited: BigInt!
  hasClaimed: Boolean!
  hasRefunded: Boolean!
  tokenSale: TokenSale!
}

type TokenInsurance @entity {
  id: ID!
  tokenId: BigInt!
  isRegistered: Boolean!
  isInitialized: Boolean!
  startTime: Int
  totalIgnited: BigInt
  tokensPerEthWad: BigInt
  baseXEth: BigInt
  baseTokenLidPool: BigInt
  redeemedXEth: BigInt
  claimedXEth: BigInt
  claimedTokenLidPool: BigInt
  dev: Bytes
  deployed: Bytes
  pair: Bytes
  isUnwound: Boolean
  hasBaseFeeClaimed: Boolean
}
